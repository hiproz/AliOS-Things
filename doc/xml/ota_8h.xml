<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ota_8h" kind="file" language="C++">
    <compoundname>ota.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="base_8h" local="yes">base.h</includes>
    <includedby refid="hal_8h" local="no">/home/work/me/AliOS-Things/include/hal/hal.h</includedby>
    <incdepgraph>
      <node id="263">
        <label>sys/stat.h</label>
      </node>
      <node id="269">
        <label>aos/yloop.h</label>
        <link refid="yloop_8h"/>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
      </node>
      <node id="249">
        <label>stdint.h</label>
      </node>
      <node id="262">
        <label>poll.h</label>
      </node>
      <node id="261">
        <label>fcntl.h</label>
      </node>
      <node id="254">
        <label>aos/debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="253">
        <label>aos/cloud.h</label>
        <link refid="cloud_8h"/>
      </node>
      <node id="266">
        <label>aos/internal/log_impl.h</label>
        <link refid="log__impl_8h"/>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>stddef.h</label>
      </node>
      <node id="255">
        <label>aos/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="256" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>aos/aos.h</label>
        <link refid="aos_8h"/>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
      </node>
      <node id="270">
        <label>aos/internal/event_type_code.h</label>
        <link refid="event__type__code_8h"/>
      </node>
      <node id="250">
        <label>base.h</label>
        <link refid="base_8h"/>
        <childnode refid="251" relation="include">
        </childnode>
      </node>
      <node id="256">
        <label>sys/types.h</label>
      </node>
      <node id="252">
        <label>aos/cli.h</label>
        <link refid="cli_8h"/>
      </node>
      <node id="260">
        <label>unistd.h</label>
      </node>
      <node id="248">
        <label>/home/work/me/AliOS-Things/include/hal/ota.h</label>
        <link refid="ota.h"/>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>aos/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="266" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>aos/kv.h</label>
        <link refid="kv_8h"/>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="268">
        <label>aos/version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="258">
        <label>aos/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
      <node id="271">
        <label>aos/errno.h</label>
        <link refid="errno_8h"/>
        <childnode refid="271" relation="include">
        </childnode>
      </node>
      <node id="264">
        <label>aos/list.h</label>
        <link refid="list_8h"/>
      </node>
      <node id="267">
        <label>aos/vfs.h</label>
        <link refid="vfs_8h"/>
        <childnode refid="256" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="272">
        <label>/home/work/me/AliOS-Things/include/hal/ota.h</label>
        <link refid="ota.h"/>
        <childnode refid="273" relation="include">
        </childnode>
      </node>
      <node id="273">
        <label>/home/work/me/AliOS-Things/include/hal/hal.h</label>
        <link refid="hal_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structota__finish__param__t" prot="public">ota_finish_param_t</innerclass>
    <innerclass refid="structboot__table__t" prot="public">boot_table_t</innerclass>
    <innerclass refid="structhal__ota__module__s" prot="public">hal_ota_module_s</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3" prot="public" static="no">
        <name>OTA_ENUM_UPDATE_TYPE</name>
        <enumvalue id="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a1a3808e04f19d06e22ff73507ae81d20" prot="public">
          <name>OTA_KERNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a3a6239b39e3f7e3772ebaa2f4dc53715" prot="public">
          <name>OTA_APP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a3c14b7d1ebd087be3f91bbbff66a76eb" prot="public">
          <name>OTA_ALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="17" column="1" bodyfile="/home/work/me/AliOS-Things/include/hal/ota.h" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8" prot="public" static="no">
        <name>OTA_ENUM_RESULT_TYPE</name>
        <enumvalue id="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8a216384b25a834aa5e7bcb997a72f2f46" prot="public">
          <name>OTA_FINISH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8a006e17978216377ef1476fd9c72040fc" prot="public">
          <name>OTA_BREAKPOINT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="23" column="1" bodyfile="/home/work/me/AliOS-Things/include/hal/ota.h" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="enum" id="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86" prot="public" static="no">
        <name>ota_parti_e</name>
        <enumvalue id="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86adec0e6ceb7585a0bdc372be35b2202a2" prot="public">
          <name>OTA_PARTITION_KERNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86af410634bf4949616823797df094346eb" prot="public">
          <name>OTA_PARTITION_APP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86ab3836c175717e36eb348aa251ea6b380" prot="public">
          <name>OTA_PARTITION_DEFAULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="28" column="1" bodyfile="/home/work/me/AliOS-Things/include/hal/ota.h" bodystart="28" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ota_8h_1a79874c02235fecf1b91f43df20615aba" prot="public" static="no">
        <type>struct <ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_s</ref></type>
        <definition>typedef struct hal_ota_module_s hal_ota_module_t</definition>
        <argsstring></argsstring>
        <name>hal_ota_module_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="25" column="1" bodyfile="/home/work/me/AliOS-Things/include/hal/ota.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ota_8h_1a6e643831d8c39930387ae58893022b80" prot="public" static="no">
        <type>int</type>
        <definition>typedef int hal_stat_t</definition>
        <argsstring></argsstring>
        <name>hal_stat_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="51" column="1" bodyfile="/home/work/me/AliOS-Things/include/hal/ota.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ota_8h_1ae04bc1ef38c25b8a9fd3cbb89d01dd7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hal_ota_register_module</definition>
        <argsstring>(hal_ota_module_t *module)</argsstring>
        <name>hal_ota_register_module</name>
        <param>
          <type><ref refid="ota_8h_1a79874c02235fecf1b91f43df20615aba" kindref="member">hal_ota_module_t</ref> *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Arch register a new module before HAL startup </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ota_8h_1ab55c78d1bd38dd7b6ec09fcbdab9d0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ota_8h_1a6e643831d8c39930387ae58893022b80" kindref="member">hal_stat_t</ref></type>
        <definition>hal_stat_t hal_ota_init</definition>
        <argsstring>(void *something)</argsstring>
        <name>hal_ota_init</name>
        <param>
          <type>void *</type>
          <declname>something</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>init ota partition</para><para><simplesect kind="note"><para>when ota start, maybe it need init something </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>something</parametername>
</parameternamelist>
<parameterdescription>
<para>extra info for ota init</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, 1 : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ota_8h_1ac00ef7e39e0f3367a4df0b7f1fd915cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ota_8h_1a6e643831d8c39930387ae58893022b80" kindref="member">hal_stat_t</ref></type>
        <definition>hal_stat_t hal_ota_write</definition>
        <argsstring>(hal_ota_module_t *m, volatile uint32_t *off_set, uint8_t *in_buf, uint32_t in_buf_len)</argsstring>
        <name>hal_ota_write</name>
        <param>
          <type><ref refid="ota_8h_1a79874c02235fecf1b91f43df20615aba" kindref="member">hal_ota_module_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>volatile uint32_t *</type>
          <declname>off_set</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>in_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>in_buf_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write data to an area on ota partition</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Refer the ota module which will be used,default module will be used if value is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>off_set</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the start address that the data is written to, and point to the last unwritten address after this function is returned, so you can call this function serval times without update this start address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>point to the data buffer that will be written to flash </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, 1 : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ota_8h_1ab759bbc68bc3388adba4400b629d43dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ota_8h_1a6e643831d8c39930387ae58893022b80" kindref="member">hal_stat_t</ref></type>
        <definition>hal_stat_t hal_ota_read</definition>
        <argsstring>(hal_ota_module_t *m, volatile uint32_t *off_set, uint8_t *out_buf, uint32_t out_buf_len)</argsstring>
        <name>hal_ota_read</name>
        <param>
          <type><ref refid="ota_8h_1a79874c02235fecf1b91f43df20615aba" kindref="member">hal_ota_module_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>volatile uint32_t *</type>
          <declname>off_set</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>out_buf_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read data from an area on ota Flash to data buffer in RAM</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Refer the ota module which will be used,default module will be used if value is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>off_set</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the start address that the data is read, and point to the last unread address after this function is returned, so you can call this function serval times without update this start address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the data buffer that stores the data read from flash </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, 1 : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ota_8h_1a157e3c5b5601442eb6edd3cb77ca0f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ota_8h_1a6e643831d8c39930387ae58893022b80" kindref="member">hal_stat_t</ref></type>
        <definition>hal_stat_t hal_ota_set_boot</definition>
        <argsstring>(hal_ota_module_t *m, void *something)</argsstring>
        <name>hal_ota_set_boot</name>
        <param>
          <type><ref refid="ota_8h_1a79874c02235fecf1b91f43df20615aba" kindref="member">hal_ota_module_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>something</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set boot options when ota reboot</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Refer the ota module which will be used,default module will be used if value is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>something</parametername>
</parameternamelist>
<parameterdescription>
<para>boot parms</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>kNoErr : On success. kGeneralErr : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ota_8h_1a9027084f6f3e908d38c1c65421bb529c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ota_8h_1a79874c02235fecf1b91f43df20615aba" kindref="member">hal_ota_module_t</ref> *</type>
        <definition>hal_ota_module_t* hal_ota_get_default_module</definition>
        <argsstring>(void)</argsstring>
        <name>hal_ota_get_default_module</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default ota module</para><para><simplesect kind="return"><para>the first registered ota module ,which is the head of module list </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/ota.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2015-2017<sp/>Alibaba<sp/>Group<sp/>Holding<sp/>Limited</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAL_OTA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_OTA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_8h" kindref="compound">base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18" refid="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a1a3808e04f19d06e22ff73507ae81d20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a1a3808e04f19d06e22ff73507ae81d20" kindref="member">OTA_KERNEL</ref>,</highlight></codeline>
<codeline lineno="19" refid="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a3a6239b39e3f7e3772ebaa2f4dc53715" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a3a6239b39e3f7e3772ebaa2f4dc53715" kindref="member">OTA_APP</ref>,</highlight></codeline>
<codeline lineno="20" refid="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a3c14b7d1ebd087be3f91bbbff66a76eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3a3c14b7d1ebd087be3f91bbbff66a76eb" kindref="member">OTA_ALL</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/><ref refid="ota_8h_1ad9cb2baa250d884bb9baa6bbf719a1f3" kindref="member">OTA_ENUM_UPDATE_TYPE</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24" refid="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8a216384b25a834aa5e7bcb997a72f2f46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8a216384b25a834aa5e7bcb997a72f2f46" kindref="member">OTA_FINISH</ref>,</highlight></codeline>
<codeline lineno="25" refid="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8a006e17978216377ef1476fd9c72040fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8a006e17978216377ef1476fd9c72040fc" kindref="member">OTA_BREAKPOINT</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}<sp/><ref refid="ota_8h_1a4759521d6f281094f72d6d8d2968b0f8" kindref="member">OTA_ENUM_RESULT_TYPE</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86" kindref="member">ota_parti_e</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86adec0e6ceb7585a0bdc372be35b2202a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86adec0e6ceb7585a0bdc372be35b2202a2" kindref="member">OTA_PARTITION_KERNEL</ref>,</highlight></codeline>
<codeline lineno="30" refid="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86af410634bf4949616823797df094346eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86af410634bf4949616823797df094346eb" kindref="member">OTA_PARTITION_APP</ref>,</highlight></codeline>
<codeline lineno="31" refid="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86ab3836c175717e36eb348aa251ea6b380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ota_8h_1a548fdaf21491fe6c0db888962a5f5f86ab3836c175717e36eb348aa251ea6b380" kindref="member">OTA_PARTITION_DEFAULT</ref>,</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structota__finish__param__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35" refid="structota__finish__param__t_1aa15407c786405496a73e48c15f73c4d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OTA_ENUM_UPDATE_TYPE<sp/><ref refid="structota__finish__param__t_1aa15407c786405496a73e48c15f73c4d9" kindref="member">update_type</ref>;</highlight></codeline>
<codeline lineno="36" refid="structota__finish__param__t_1a833598b278db89d6793f2206baa8f1b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OTA_ENUM_RESULT_TYPE<sp/><ref refid="structota__finish__param__t_1a833598b278db89d6793f2206baa8f1b9" kindref="member">result_type</ref><sp/>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><ref refid="structota__finish__param__t" kindref="compound">ota_finish_param_t</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structboot__table__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="structboot__table__t_1a38829ad8570cc9ad3f59e3c928e02ea9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structboot__table__t_1a38829ad8570cc9ad3f59e3c928e02ea9" kindref="member">start_address</ref>;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>address<sp/>of<sp/>the<sp/>bin<sp/>saved<sp/>on<sp/>flash.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structboot__table__t_1a12590d63f9180d90e072fc6dd47fbbc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structboot__table__t_1a12590d63f9180d90e072fc6dd47fbbc5" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>file<sp/>real<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structboot__table__t_1a4b2fc6e18945aecf679b8dd817b1b07d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>version[8];</highlight></codeline>
<codeline lineno="43" refid="structboot__table__t_1aa8ae40f4598a6658af8464f32529b790" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structboot__table__t_1aa8ae40f4598a6658af8464f32529b790" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>B:bootloader,<sp/>P:boot_table,<sp/>A:application,<sp/>D:<sp/>8782<sp/>driver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structboot__table__t_1a23f09774844ddb42c26af0e6091bdc6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="structboot__table__t_1a23f09774844ddb42c26af0e6091bdc6f" kindref="member">upgrade_type</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>u:upgrade<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structboot__table__t_1a0decc9ccb49f195a76948ff79c32534b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structboot__table__t_1a0decc9ccb49f195a76948ff79c32534b" kindref="member">crc</ref>;</highlight></codeline>
<codeline lineno="46" refid="structboot__table__t_1af02f384553742a35f956e59cead43507" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/>reserved[4];</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/><ref refid="structboot__table__t" kindref="compound">boot_table_t</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="ota_8h_1a79874c02235fecf1b91f43df20615aba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_s</ref><sp/><ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="ota_8h_1a6e643831d8c39930387ae58893022b80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ota_8h_1a6e643831d8c39930387ae58893022b80" kindref="member">hal_stat_t</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structhal__ota__module__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_s</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="structhal__ota__module__s_1a9ec38a2267572548228c5e248104c580" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhal__module__base__t" kindref="compound">hal_module_base_t</ref><sp/><ref refid="structhal__ota__module__s_1a9ec38a2267572548228c5e248104c580" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Link<sp/>to<sp/>HW<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structhal__ota__module__s_1a1a7677b91d28045fef73901657b9311e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structhal__ota__module__s_1a1a7677b91d28045fef73901657b9311e" kindref="member">init</ref>)(<ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*m,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*something);</highlight></codeline>
<codeline lineno="58" refid="structhal__ota__module__s_1ad8a89e8c9e6c19b2a32eafeadf30aa56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structhal__ota__module__s_1ad8a89e8c9e6c19b2a32eafeadf30aa56" kindref="member">ota_write</ref>)(<ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*m,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*off_set,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*in_buf<sp/>,<sp/>uint32_t<sp/>in_buf_len);</highlight></codeline>
<codeline lineno="60" refid="structhal__ota__module__s_1ada89794cbd309bf7bfd95ebb802161e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structhal__ota__module__s_1ada89794cbd309bf7bfd95ebb802161e5" kindref="member">ota_read</ref>)(<ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*m,<sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*off_set,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out_buf<sp/>,<sp/>uint32_t<sp/>out_buf_len);</highlight></codeline>
<codeline lineno="62" refid="structhal__ota__module__s_1a7f44125e7ba0dbbd4a809263bddedfb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structhal__ota__module__s_1a7f44125e7ba0dbbd4a809263bddedfb0" kindref="member">ota_set_boot</ref>)(<ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*m,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*something);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ota_8h_1ae04bc1ef38c25b8a9fd3cbb89d01dd7f" kindref="member">hal_ota_register_module</ref>(<ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*module);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">hal_stat_t<sp/><ref refid="ota_8h_1ab55c78d1bd38dd7b6ec09fcbdab9d0cf" kindref="member">hal_ota_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*something);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">hal_stat_t<sp/><ref refid="ota_8h_1ac00ef7e39e0f3367a4df0b7f1fd915cf" kindref="member">hal_ota_write</ref>(<ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*m,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*off_set,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*in_buf<sp/>,<sp/>uint32_t<sp/>in_buf_len);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">hal_stat_t<sp/><ref refid="ota_8h_1ab759bbc68bc3388adba4400b629d43dd" kindref="member">hal_ota_read</ref>(<ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*m,<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*off_set,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out_buf,<sp/>uint32_t<sp/>out_buf_len);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">hal_stat_t<sp/><ref refid="ota_8h_1a157e3c5b5601442eb6edd3cb77ca0f6d" kindref="member">hal_ota_set_boot</ref>(<ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*m,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*something);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="structhal__ota__module__s" kindref="compound">hal_ota_module_t</ref><sp/>*<ref refid="ota_8h_1a9027084f6f3e908d38c1c65421bb529c" kindref="member">hal_ota_get_default_module</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAL_OTA_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/work/me/AliOS-Things/include/hal/ota.h"/>
  </compounddef>
</doxygen>
