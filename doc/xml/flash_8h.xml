<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="flash_8h" kind="file" language="C++">
    <compoundname>flash.h</compoundname>
    <includedby refid="hal_8h" local="no">/home/work/me/AliOS-Things/include/hal/hal.h</includedby>
    <includedby refid="soc_8h" local="yes">/home/work/me/AliOS-Things/include/hal/soc/soc.h</includedby>
    <invincdepgraph>
      <node id="282">
        <label>/home/work/me/AliOS-Things/include/hal/soc/flash.h</label>
        <link refid="flash.h"/>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="284">
        <label>/home/work/me/AliOS-Things/include/hal/soc/soc.h</label>
        <link refid="soc_8h"/>
      </node>
      <node id="283">
        <label>/home/work/me/AliOS-Things/include/hal/hal.h</label>
        <link refid="hal_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structhal__logic__partition__t" prot="public">hal_logic_partition_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="flash_8h_1ab1e58b6e8ff6f3761bdf24c04478c7f6" prot="public" static="no">
        <name>PAR_OPT_READ_POS</name>
        <initializer>( 0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="8" column="9" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="flash_8h_1a68ff33d27eb40be97075ac7acc28b1dc" prot="public" static="no">
        <name>PAR_OPT_WRITE_POS</name>
        <initializer>( 1 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="9" column="9" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="flash_8h_1a0b707d2a64f885c6386592c581470077" prot="public" static="no">
        <name>PAR_OPT_READ_MASK</name>
        <initializer>( 0x1u &lt;&lt; PAR_OPT_READ_POS )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="11" column="9" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="flash_8h_1a19bd5124832592851507c6febb93a65d" prot="public" static="no">
        <name>PAR_OPT_WRITE_MASK</name>
        <initializer>( 0x1u &lt;&lt; PAR_OPT_WRITE_POS )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="12" column="9" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="flash_8h_1a4f5a8817f87909dd93f8b655236bfa97" prot="public" static="no">
        <name>PAR_OPT_READ_DIS</name>
        <initializer>( 0x0u &lt;&lt; PAR_OPT_READ_POS )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="14" column="9" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="flash_8h_1ad38fd963b47f4417058bde27626cec60" prot="public" static="no">
        <name>PAR_OPT_READ_EN</name>
        <initializer>( 0x1u &lt;&lt; PAR_OPT_READ_POS )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="15" column="9" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="flash_8h_1a2e3aedc128cf4fc5c1962e9229ef00e9" prot="public" static="no">
        <name>PAR_OPT_WRITE_DIS</name>
        <initializer>( 0x0u &lt;&lt; PAR_OPT_WRITE_POS )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="16" column="9" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="flash_8h_1a06797fb3f63772e5b3b7b72edd7ae86b" prot="public" static="no">
        <name>PAR_OPT_WRITE_EN</name>
        <initializer>( 0x1u &lt;&lt; PAR_OPT_WRITE_POS )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="17" column="9" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" prot="public" static="no">
        <name>hal_partition_t</name>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a7902f89de2e949a964de0cdfbfc8969d" prot="public">
          <name>HAL_PARTITION_ERROR</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a020f7b70e39988a0e8bf6c70eb162e97" prot="public">
          <name>HAL_PARTITION_BOOTLOADER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a4c08de6ce88645a41875fc00ce423a6e" prot="public">
          <name>HAL_PARTITION_APPLICATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a8c6b3e17e616f96822cf3176d16d749e" prot="public">
          <name>HAL_PARTITION_ATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097abe36db5eb6ac33d1c559be3345420a9d" prot="public">
          <name>HAL_PARTITION_OTA_TEMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a7b5604c590e83b357c417372e53aa4a9" prot="public">
          <name>HAL_PARTITION_RF_FIRMWARE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097abd32724868c7cd2cf2672dfd189dc580" prot="public">
          <name>HAL_PARTITION_PARAMETER_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a8b4b4606a11ead539f5f5ae288d2d8dc" prot="public">
          <name>HAL_PARTITION_PARAMETER_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a04e8791984950022711af1920acbdb4e" prot="public">
          <name>HAL_PARTITION_PARAMETER_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a0d0c848c6877ef74ef54065fa8e40022" prot="public">
          <name>HAL_PARTITION_PARAMETER_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a63608eff31675eed73632ae7c0e1ecda" prot="public">
          <name>HAL_PARTITION_BT_FIRMWARE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a392ffb76dc76a346cfeb504f810c2ae4" prot="public">
          <name>HAL_PARTITION_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097ab89dc18f2260071920ae52f2db075b9c" prot="public">
          <name>HAL_PARTITION_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="19" column="1" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="19" bodyend="33"/>
      </memberdef>
      <memberdef kind="enum" id="flash_8h_1ad6e8fb5585076e4fc4986317027ab76d" prot="public" static="no">
        <name>hal_flash_t</name>
        <enumvalue id="flash_8h_1ad6e8fb5585076e4fc4986317027ab76da9b82ed7e62ba3e731db6ea6cb1336634" prot="public">
          <name>HAL_FLASH_EMBEDDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dae69060b29567dc8ab65dd384a68d17be" prot="public">
          <name>HAL_FLASH_SPI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dad61f42ddb936b488225ef426960b7b5f" prot="public">
          <name>HAL_FLASH_QSPI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1ad6e8fb5585076e4fc4986317027ab76da6eda24aceaa905af4e2b9fe04acd15e2" prot="public">
          <name>HAL_FLASH_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dabf780a0288e2c170237956f139d43836" prot="public">
          <name>HAL_FLASH_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="35" column="1" bodyfile="/home/work/me/AliOS-Things/include/hal/soc/flash.h" bodystart="35" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="flash_8h_1a953a4ec1ce382dde733219f6e83c6e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhal__logic__partition__t" kindref="compound">hal_logic_partition_t</ref> *</type>
        <definition>hal_logic_partition_t* hal_flash_get_info</definition>
        <argsstring>(hal_partition_t in_partition)</argsstring>
        <name>hal_flash_get_info</name>
        <param>
          <type><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref></type>
          <declname>in_partition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the infomation of the specified flash area</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>The target flash logical partition which should be erased</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HAL_logi_partition struct </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="flash_8h_1a3d3a2ca9f773c996517b5e57882146a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t hal_flash_erase</definition>
        <argsstring>(hal_partition_t in_partition, uint32_t off_set, uint32_t size)</argsstring>
        <name>hal_flash_erase</name>
        <param>
          <type><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref></type>
          <declname>in_partition</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>off_set</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Erase an area on a Flash logical partition</para><para><simplesect kind="note"><para>Erase on an address will erase all data on a sector that the address is belonged to, this function does not save data that beyond the address area but in the affected sector, the data will be lost.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>The target flash logical partition which should be erased </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">off_set</parametername>
</parameternamelist>
<parameterdescription>
<para>Start address of the erased flash area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the erased flash area</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, EIO : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="flash_8h_1a113a623b5268888f7e52e2655da69419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t hal_flash_write</definition>
        <argsstring>(hal_partition_t in_partition, uint32_t *off_set, const void *in_buf, uint32_t in_buf_len)</argsstring>
        <name>hal_flash_write</name>
        <param>
          <type><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref></type>
          <declname>in_partition</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>off_set</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>in_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>in_buf_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write data to an area on a flash logical partition without erase</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>The target flash logical partition which should be read which should be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">off_set</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the start address that the data is written to, and point to the last unwritten address after this function is returned, so you can call this function serval times without update this start address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>point to the data buffer that will be written to flash </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inBufferLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, EIO : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="flash_8h_1a7086d7ad9e75443939fd49bdc0c197fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t hal_flash_erase_write</definition>
        <argsstring>(hal_partition_t in_partition, uint32_t *off_set, const void *in_buf, uint32_t in_buf_len)</argsstring>
        <name>hal_flash_erase_write</name>
        <param>
          <type><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref></type>
          <declname>in_partition</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>off_set</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>in_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>in_buf_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write data to an area on a flash logical partition with erase first</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>The target flash logical partition which should be read which should be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">off_set</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the start address that the data is written to, and point to the last unwritten address after this function is returned, so you can call this function serval times without update this start address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>point to the data buffer that will be written to flash </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inBufferLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, EIO : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="flash_8h_1aa0b51f3833bf23e62753d5cc46c47bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t hal_flash_read</definition>
        <argsstring>(hal_partition_t in_partition, uint32_t *off_set, void *out_buf, uint32_t in_buf_len)</argsstring>
        <name>hal_flash_read</name>
        <param>
          <type><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref></type>
          <declname>in_partition</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>off_set</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>in_buf_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read data from an area on a Flash to data buffer in RAM</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_partition</parametername>
</parameternamelist>
<parameterdescription>
<para>The target flash logical partition which should be read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">off_set</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the start address that the data is read, and point to the last unread address after this function is returned, so you can call this function serval times without update this start address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">outBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the data buffer that stores the data read from flash </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inBufferLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the buffer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, EIO : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="flash_8h_1a7eddbd75e2521d13a29d4e8c27ece172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t hal_flash_enable_secure</definition>
        <argsstring>(hal_partition_t partition, uint32_t off_set, uint32_t size)</argsstring>
        <name>hal_flash_enable_secure</name>
        <param>
          <type><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref></type>
          <declname>partition</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>off_set</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set security options on a logical partition</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">partition</parametername>
</parameternamelist>
<parameterdescription>
<para>The target flash logical partition </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the start address that the data is read, and point to the last unread address after this function is returned, so you can call this function serval times without update this start address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of enabled flash area</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, EIO : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="flash_8h_1a337f2c48f9b8b022f5626905850a4112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t hal_flash_dis_secure</definition>
        <argsstring>(hal_partition_t partition, uint32_t off_set, uint32_t size)</argsstring>
        <name>hal_flash_dis_secure</name>
        <param>
          <type><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref></type>
          <declname>partition</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>off_set</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable security options on a logical partition</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">partition</parametername>
</parameternamelist>
<parameterdescription>
<para>The target flash logical partition </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to the start address that the data is read, and point to the last unread address after this function is returned, so you can call this function serval times without update this start address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of disabled flash area</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 : On success, EIO : If an error occurred with any step </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h" line="150" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2015-2017<sp/>Alibaba<sp/>Group<sp/>Holding<sp/>Limited</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAL_FLASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_FLASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="flash_8h_1ab1e58b6e8ff6f3761bdf24c04478c7f6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAR_OPT_READ_POS<sp/><sp/>(<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="flash_8h_1a68ff33d27eb40be97075ac7acc28b1dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAR_OPT_WRITE_POS<sp/>(<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="flash_8h_1a0b707d2a64f885c6386592c581470077" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAR_OPT_READ_MASK<sp/><sp/>(<sp/>0x1u<sp/>&lt;&lt;<sp/>PAR_OPT_READ_POS<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="flash_8h_1a19bd5124832592851507c6febb93a65d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAR_OPT_WRITE_MASK<sp/>(<sp/>0x1u<sp/>&lt;&lt;<sp/>PAR_OPT_WRITE_POS<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="flash_8h_1a4f5a8817f87909dd93f8b655236bfa97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAR_OPT_READ_DIS<sp/><sp/>(<sp/>0x0u<sp/>&lt;&lt;<sp/>PAR_OPT_READ_POS<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="flash_8h_1ad38fd963b47f4417058bde27626cec60" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAR_OPT_READ_EN<sp/><sp/><sp/>(<sp/>0x1u<sp/>&lt;&lt;<sp/>PAR_OPT_READ_POS<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="flash_8h_1a2e3aedc128cf4fc5c1962e9229ef00e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAR_OPT_WRITE_DIS<sp/>(<sp/>0x0u<sp/>&lt;&lt;<sp/>PAR_OPT_WRITE_POS<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="flash_8h_1a06797fb3f63772e5b3b7b72edd7ae86b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PAR_OPT_WRITE_EN<sp/><sp/>(<sp/>0x1u<sp/>&lt;&lt;<sp/>PAR_OPT_WRITE_POS<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a7902f89de2e949a964de0cdfbfc8969d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a7902f89de2e949a964de0cdfbfc8969d" kindref="member">HAL_PARTITION_ERROR</ref><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="21" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a020f7b70e39988a0e8bf6c70eb162e97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a020f7b70e39988a0e8bf6c70eb162e97" kindref="member">HAL_PARTITION_BOOTLOADER</ref>,</highlight></codeline>
<codeline lineno="22" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a4c08de6ce88645a41875fc00ce423a6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a4c08de6ce88645a41875fc00ce423a6e" kindref="member">HAL_PARTITION_APPLICATION</ref>,</highlight></codeline>
<codeline lineno="23" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a8c6b3e17e616f96822cf3176d16d749e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a8c6b3e17e616f96822cf3176d16d749e" kindref="member">HAL_PARTITION_ATE</ref>,</highlight></codeline>
<codeline lineno="24" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097abe36db5eb6ac33d1c559be3345420a9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097abe36db5eb6ac33d1c559be3345420a9d" kindref="member">HAL_PARTITION_OTA_TEMP</ref>,</highlight></codeline>
<codeline lineno="25" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a7b5604c590e83b357c417372e53aa4a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a7b5604c590e83b357c417372e53aa4a9" kindref="member">HAL_PARTITION_RF_FIRMWARE</ref>,</highlight></codeline>
<codeline lineno="26" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097abd32724868c7cd2cf2672dfd189dc580" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097abd32724868c7cd2cf2672dfd189dc580" kindref="member">HAL_PARTITION_PARAMETER_1</ref>,</highlight></codeline>
<codeline lineno="27" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a8b4b4606a11ead539f5f5ae288d2d8dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a8b4b4606a11ead539f5f5ae288d2d8dc" kindref="member">HAL_PARTITION_PARAMETER_2</ref>,</highlight></codeline>
<codeline lineno="28" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a04e8791984950022711af1920acbdb4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a04e8791984950022711af1920acbdb4e" kindref="member">HAL_PARTITION_PARAMETER_3</ref>,</highlight></codeline>
<codeline lineno="29" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a0d0c848c6877ef74ef54065fa8e40022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a0d0c848c6877ef74ef54065fa8e40022" kindref="member">HAL_PARTITION_PARAMETER_4</ref>,</highlight></codeline>
<codeline lineno="30" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a63608eff31675eed73632ae7c0e1ecda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a63608eff31675eed73632ae7c0e1ecda" kindref="member">HAL_PARTITION_BT_FIRMWARE</ref>,</highlight></codeline>
<codeline lineno="31" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a392ffb76dc76a346cfeb504f810c2ae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097a392ffb76dc76a346cfeb504f810c2ae4" kindref="member">HAL_PARTITION_MAX</ref>,</highlight></codeline>
<codeline lineno="32" refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097ab89dc18f2260071920ae52f2db075b9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097ab89dc18f2260071920ae52f2db075b9c" kindref="member">HAL_PARTITION_NONE</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}<sp/><ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36" refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76da9b82ed7e62ba3e731db6ea6cb1336634" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76da9b82ed7e62ba3e731db6ea6cb1336634" kindref="member">HAL_FLASH_EMBEDDED</ref>,</highlight></codeline>
<codeline lineno="37" refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dae69060b29567dc8ab65dd384a68d17be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dae69060b29567dc8ab65dd384a68d17be" kindref="member">HAL_FLASH_SPI</ref>,</highlight></codeline>
<codeline lineno="38" refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dad61f42ddb936b488225ef426960b7b5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dad61f42ddb936b488225ef426960b7b5f" kindref="member">HAL_FLASH_QSPI</ref>,</highlight></codeline>
<codeline lineno="39" refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76da6eda24aceaa905af4e2b9fe04acd15e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76da6eda24aceaa905af4e2b9fe04acd15e2" kindref="member">HAL_FLASH_MAX</ref>,</highlight></codeline>
<codeline lineno="40" refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dabf780a0288e2c170237956f139d43836" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76dabf780a0288e2c170237956f139d43836" kindref="member">HAL_FLASH_NONE</ref>,</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/><ref refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76d" kindref="member">hal_flash_t</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structhal__logic__partition__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44" refid="structhal__logic__partition__t_1ad75fd480c3bd88c6b0f07d1fc2f440b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="flash_8h_1ad6e8fb5585076e4fc4986317027ab76d" kindref="member">hal_flash_t</ref><sp/><ref refid="structhal__logic__partition__t_1ad75fd480c3bd88c6b0f07d1fc2f440b0" kindref="member">partition_owner</ref>;</highlight></codeline>
<codeline lineno="45" refid="structhal__logic__partition__t_1af89475ae7ce468f0e153db5b6686c8dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structhal__logic__partition__t_1af89475ae7ce468f0e153db5b6686c8dd" kindref="member">partition_description</ref>;</highlight></codeline>
<codeline lineno="46" refid="structhal__logic__partition__t_1a5d4665d55094278d3e2ca4b9639d0216" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><ref refid="structhal__logic__partition__t_1a5d4665d55094278d3e2ca4b9639d0216" kindref="member">partition_start_addr</ref>;</highlight></codeline>
<codeline lineno="47" refid="structhal__logic__partition__t_1a8e01a8760d2001357fab02315f670804" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><ref refid="structhal__logic__partition__t_1a8e01a8760d2001357fab02315f670804" kindref="member">partition_length</ref>;</highlight></codeline>
<codeline lineno="48" refid="structhal__logic__partition__t_1a4f36f9a67fae10932b9ad5b47e32cfff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><ref refid="structhal__logic__partition__t_1a4f36f9a67fae10932b9ad5b47e32cfff" kindref="member">partition_options</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/><ref refid="structhal__logic__partition__t" kindref="compound">hal_logic_partition_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="structhal__logic__partition__t" kindref="compound">hal_logic_partition_t</ref><sp/>*<ref refid="flash_8h_1a953a4ec1ce382dde733219f6e83c6e1b" kindref="member">hal_flash_get_info</ref>(<ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref><sp/>in_partition);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">int32_t<sp/><ref refid="flash_8h_1a3d3a2ca9f773c996517b5e57882146a1" kindref="member">hal_flash_erase</ref>(<ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref><sp/>in_partition,<sp/>uint32_t<sp/>off_set,<sp/>uint32_t<sp/>size);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">int32_t<sp/><ref refid="flash_8h_1a113a623b5268888f7e52e2655da69419" kindref="member">hal_flash_write</ref>(<ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref><sp/>in_partition,<sp/>uint32_t<sp/>*off_set,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*in_buf,<sp/>uint32_t<sp/>in_buf_len);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">int32_t<sp/><ref refid="flash_8h_1a7086d7ad9e75443939fd49bdc0c197fe" kindref="member">hal_flash_erase_write</ref>(<ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref><sp/>in_partition,<sp/>uint32_t<sp/>*off_set,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*in_buf,<sp/>uint32_t<sp/>in_buf_len);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">int32_t<sp/><ref refid="flash_8h_1aa0b51f3833bf23e62753d5cc46c47bba" kindref="member">hal_flash_read</ref>(<ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref><sp/>in_partition,<sp/>uint32_t<sp/>*off_set,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*out_buf,<sp/>uint32_t<sp/>in_buf_len);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">int32_t<sp/><ref refid="flash_8h_1a7eddbd75e2521d13a29d4e8c27ece172" kindref="member">hal_flash_enable_secure</ref>(<ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref><sp/>partition,<sp/>uint32_t<sp/>off_set,<sp/>uint32_t<sp/>size);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">int32_t<sp/><ref refid="flash_8h_1a337f2c48f9b8b022f5626905850a4112" kindref="member">hal_flash_dis_secure</ref>(<ref refid="flash_8h_1a1ff07b8a9c096b1b8ca7847be7c6e097" kindref="member">hal_partition_t</ref><sp/>partition,<sp/>uint32_t<sp/>off_set,<sp/>uint32_t<sp/>size);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAL_FLASH_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/work/me/AliOS-Things/include/hal/soc/flash.h"/>
  </compounddef>
</doxygen>
